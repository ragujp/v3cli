name: client-build-and-release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch name'
        required: true
        default: 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # --- Linux ---
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: arm
            goarm: 6
          - goos: linux
            goarch: arm
            goarm: 7
          # --- Windows ---
          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64
          # --- macOS ---
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0
      - name: Check tagged branch
        run: |
          BRANCHS=$(git branch --contains ${{ github.ref_name }})
          set -- $BRANCHS
          for BRANCH in $BRANCHS ; do
            if [[ "$BRANCH" == "main" ]]; then
              exit 0
            fi
          done
          exit 1

      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        id: setup-go
        with:
          go-version-file: 'go.mod'

      - name: Download Go modules
        shell: bash
        if: ${{ steps.setup-go.outputs.cache-hit != 'true' }}
        run: go mod download

      - name: Build the project
        run: |
          if [ "${{ matrix.goarch }}" = "arm" ]; then
           export GOARM=${{ matrix.goarm }}
           OUTFILE=inonius_v3cli-${{ matrix.goos }}-${{ matrix.goarch }}v${{ matrix.goarm }}
          else
           OUTFILE=inonius_v3cli-${{ matrix.goos }}-${{ matrix.goarch }}
          fi
          if [ "${{ matrix.goos }}" == "windows" ]; then
           GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} GOARM=${GOARM:-} go build -o ${OUTFILE}.exe
          else
           GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} GOARM=${GOARM:-} go build -o ${OUTFILE}
          fi
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: inonius_v3cli-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goarch == 'arm' && format('v{0}', matrix.goarm) || '' }}
          path: |
            inonius_v3cli-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goarch == 'arm' && format('v{0}', matrix.goarm) || '' }}
            inonius_v3cli-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goarch == 'arm' && format('v{0}', matrix.goarm) || '' }}.exe

      #      - name: Bump version and push tag
      #        id: bump
      #        uses: anothrNick/github-tag-action@v1
      #        env:
      #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #          WITH_V: false
      #          DEFAULT_BUMP: patch

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: create release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ github.tag_name }}
          tag_name: ${{ github.tag_name }}
          draft: false
          prerelease: false
          files: artifacts/**
